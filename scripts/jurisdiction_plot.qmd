---
title: "Spatial Map Data"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}


library(tidyverse)
library(sf)
library(ggplot2)
library(maps)
library(showtext)

#redacted offline
#add google fonts
font_add_google(name = "Poppins", family = "poppins")
font_add_google(name= "Inter", family="inter")

##redacted offline
##utilize google fonts
showtext_auto()
```

```{r}
##read in database
data_base <- read_csv(here::here("data/Working_Policy_Database_1.csv")) %>% 
  janitor::clean_names() 
  
 ##select main descriptive policies 
##please note field names and update if necessary
jurisdiction_df <- data_base %>% 
  select(title_of_policy, ##title of policy
         # lat, ##latitude,
         # lon, ##longitude
         # legal_status, ##denoting statutory vs. non
         policy_category, ##main category of policy (clean procurement, building codes/planning)
         policy_subcategory, 
         methodology, ##method of achieving carbon reduction
         participation, ##mandatory vs. voluntary
         location, ##specific location 
         country, ##country where policy is implemented
         jurisdiction)


##remove nas
jurisdiction_df_clean <- jurisdiction_df[!is.na(jurisdiction_df$jurisdiction), ]


policy_category_pallette <- c("Climate Commitment" = "#29af7FFF",
                          "Clean Procurement" = "#33638DFF", "Building Codes/Planning" = "#482677ff", "Training & Education" = "#fde725")


```

```{r}


policies_expanded <- jurisdiction_df_clean %>%
  separate_rows(policy_category, policy_subcategory, sep = ",") %>%
  mutate(
    policy_category = str_trim(policy_category),     # Removes leading and trailing whitespace
    policy_subcategory = str_trim(policy_subcategory) # Removes leading and trailing whitespace
  )
# 

jurisdiction_factor <- c("City", "U.S. County", "State", "National", "International")

type_jurisdiction <- policies_expanded %>% 
  filter(jurisdiction != "Association/Group") %>% 
  mutate(jurisdiction=factor(jurisdiction, levels=jurisdiction_factor))


type_combined <- type_jurisdiction %>% 
  group_by(jurisdiction, policy_category) %>% 
  summarize(count = n()) %>% 
  rename("category" = policy_category)


jurisdiction_cat_graph_ready <- type_combined %>% 
    group_by(jurisdiction, category) %>% 
  summarise(total = sum(count))

unique(jurisdiction_cat_graph_ready$category)

stacked_type_jur <- ggplot(data=jurisdiction_cat_graph_ready, aes(x=category, y=total, fill=jurisdiction)) +
  geom_bar(stat="identity")+
  labs(x="Policy Type", y="Number of Policies", fill="Jurisdiction Level", title="Policy Count by Category and Jurisdiction Level")+
  scale_y_continuous(breaks=seq(0, 30, by=1))+
  scale_fill_manual(values=c("#b3cde0", "#6497b1", "#005b96", "#03396c", "navy"))+
  theme_minimal()+
  theme(axis.title = element_text(face="bold",
                                  family="inter", 
                                   size=35),
        plot.title=element_text(face="bold",
                                family="inter", 
                                   size=40),
        legend.title=element_text(face="bold",
                                  family="inter",
                                  size=30),
        axis.text = element_text(family="poppins",
                                 size=30),
        legend.text = element_text(family="poppins",
                                 size=30),
        legend.position="bottom")+
  
  coord_flip()
  

stacked_type_jur

ggsave(here::here("images/jurisdiction.png"), plot = stacked_type_jur, width = 10, height = 4, dpi = 320)
```
