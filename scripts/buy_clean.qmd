---
title: "Buy Cleans"
format: html
editor: visual
---

## Buy Clean Policies

```{r}

library(tidyverse)
library(sf)
library(ggplot2)
library(maps)
library(showtext)

##redacted offline
##add google fonts
font_add_google(name = "Poppins", family = "poppins")
font_add_google(name= "Inter", family="inter")

##redacted offline
##utilize google fonts
showtext_auto()


data_base <- read_csv(here::here("data/Working_Policy_Database_1.csv")) %>% 
  janitor::clean_names() 
  

data_base_df <- data_base[!is.na(data_base$date_entered), ]
```

```{r}


buy_cleans <- data_base_df %>% 
  filter(grepl("Buy Clean", policy_subcategory))
  # filter(primary_subcategory == "Buy Clean")

# filter(grepl("apple", ColumnR))
```

## Cadence

```{r}

cadence_df <- data.frame(buy_clean = c("California", "New York",  "Colorado", "Maryland"), 
                         start_year = c(2022,2025,2027,2026), cadence=c(3,2,4,3)) %>% 
  mutate(next_year = start_year+cadence)

```

```{r}

year_range <- range(c(cadence_df$start_year, cadence_df$next_year))
all_years <- seq(from = year_range[1], to = year_range[2], by = 1)

cadence_plot <- ggplot(cadence_df, aes(x = reorder(buy_clean, start_year), y = start_year)) +
  geom_segment(aes(xend = buy_clean, yend = next_year), color = "grey") +
  geom_point(aes(y = start_year, color = "Start Year"), size = 3) +
  geom_point(aes(y = next_year, color = "First Year Lowered"), size = 3) +
  geom_text(aes(label = paste(cadence, "Year Cadence"), y = (start_year + next_year) / 2), vjust = -0.5,
            size=10) +
  coord_flip() +
  scale_color_manual(values = c("Start Year" = "blue", "First Year Lowered" = "gray")) + # Define custom colors
  scale_y_continuous(breaks = all_years) +
  labs(title = "Buy Clean Limit Reduction Cadences",
       x = "Buy Clean State",
       y = "Year") +
  scale_y_continuous()+
  theme_minimal() +
  theme(
  axis.text =  element_text(family="inter",
                                  size = 25),
  axis.title = element_text(family="inter",
                                  size = 30,
                            face="bold"),
  plot.title = element_text(family="inter",
                                  size = 35,
                            face="bold"),
  legend.title = element_blank(),
  legend.text = element_text(family="inter",
                                  size = 25)
  
  )

ggsave(here::here("images/cadence.png"), plot = cadence_plot, width = 7, height = 4, dpi = 320)
```

```{r}


building_codes <- data_base_df %>% 
  filter(grepl("Building Codes/Planning", policy_category))
  
 
# Separate comma-separated values into their own rows
separated_data <- building_codes %>%
  separate_rows(methodology, sep = ",")

# Count occurrences of each methodology
methodology_counts <- separated_data %>%
  count(methodology) 

# Filter rows where the count is greater than 3
filtered_counts <- methodology_counts %>%
  filter(n > 3) %>% 
  mutate(percentage = (n / sum(n)) * 100) 



# Plot using ggplot
method_plot <- ggplot(filtered_counts, aes(x = methodology, y = n, fill = methodology)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = paste0(round(percentage, 1), "%")), vjust = 2, size = 10, family="inter") +
  scale_y_continuous(breaks = c(1:12))+
  labs(title = "Building Code/Planning Strategies",
       x = "Strategy",
       y = "Count") +

  theme_minimal() +
  theme(
        legend.position="none",
         axis.text =  element_text(family="inter",
                                  size = 25),
  axis.title = element_text(family="inter",
                                  size = 25,
                            face="bold"),
        plot.title=element_text(family="inter",
                                  size = 30,
                                hjust=0.5)
  )

ggsave(here::here("images/building_codes.png"), plot = method_plot, width = 7, height = 4, dpi = 320)
```
