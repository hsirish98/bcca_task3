---
title: "Material Data Wrangling"
author: "Hannah Irish"
format: html
editor: visual
---

Load packages

```{r}

## load tidyverse package 
library(tidyverse)


```

Read in policy database

```{r}

##
policy_database <- read_csv(here::here("data/Working_Policy_Database.csv")) %>%
  janitor::clean_names()
  # Convert the "materials" column to lowercase so they'll be captured appropriately
  policy_database$covered_material_s <- tolower(policy_database$covered_material_s)

```

Count the mentions of each material

```{r}

policy_database_mat_sep <- policy_database %>%
  mutate(parsed_values = strsplit(covered_material_s, ",")) %>% 
  select(parsed_values)

material_test <- policy_database_mat_sep %>%
  unnest(parsed_values) %>% 
  drop_na()

material_list_unique <- unique(material_test)


## from here you will need to look at this list and use your eyes to determine the unique materials


##make a list of the materials to capture; this will be CONTAINING these words so if something needs to be distinct, make it so
material_list <- c("aluminum", "asphalt", "brick", "cement", "concrete", "concrete reinforcing steel", "glass", "wood",  "mineral wood", "insulation", "iron", "rebar", "steel", "timber")

##we will deal with things being the same later (aka rebar and concrete reinforcing steel)


##initialize material column to 0 in policy_database
for (material in material_list) {
  policy_database[[material]] <- 0
}



for (material in material_list){
  policy_database[[material]] <- str_count(policy_database$covered_material_s, material)
}


rebar_df <- policy_database[grepl("concrete reinforcing steel", policy_database$covered_material_s, ignore.case = TRUE), ]


## label as 1 if the material is included and as 0 if it's not
for(material in material_list){
  policy_database[[material]] <- ifelse(policy_database[[material]] >0 ,1,0)
}

# new database to investigate that functions worked correctly
policy_database_materials <- policy_database %>%
  select(legal_status, title_of_policy, primary_policy_category_broad, secondary_category_if_necessary, primary_subcategory, secondary_subcategory_if_necessary, covered_material_s, other:ncol(policy_database)) %>% 
  select(-other)

# 
# buy_clean_tidy <-  policy_database %>%
#   filter(primary_subcategory =="Buy Clean" || secondary_subcategory_if_necessary == "Buy Clean") %>%
#   select(policy_type, other:ncol(policy_database))

# sum the material counts to get total policies which mention them
sums_df_nontidy <- policy_database_materials %>%
  summarise_at(c(8:ncol(policy_database_materials)), sum, na.rm = TRUE) %>% pivot_longer(., cols=everything(), values_to="n_policies")

## we now need to remove some duplicates which will require the use of human eyes and brain. 

## we need to find the uses of "wood" which really actually only are wood

wood_pol <- policy_database_materials %>% 
  filter(wood>0 & `mineral wood` >0) %>% 
  select(`mineral wood`, wood, covered_material_s)
##above is the amount that contain both "mineral wood" as well as "wood" -- read through them and save into the following the number that contain both but it's JUST because the word "wood" is included in "mineral wood"

wood_to_remove <- 4 ## I have saved 4 (all of them)


##concrete reinforcing steel will count as "concrete" but it shouldn't!
crs_concrete <- policy_database_materials %>% 
  filter(`concrete reinforcing steel` > 0 & concrete > 0) %>% 
  select(`concrete reinforcing steel`, concrete, covered_material_s)


crs_to_remove <- 4 ## I have saved 4 (all of them) (this is unsurpising)

##these above have all been the same 4 policies causing an issue (@ california)

#rebar and steel will be the same so we're going to make sure there are no double counts

rebar_steel <- policy_database_materials %>% 
  filter(rebar > 0 & steel > 0) %>% 
  select(rebar, steel, covered_material_s)

rebar_steel_to_remove <- 3 ##3 contain both "rebar" AND "steel"


concrete_cement <- policy_database_materials %>% 
  filter(concrete > 0 & cement > 0) %>% 
  select(concrete, cement, covered_material_s)

cement_to_remove <- 4

timber_to_add <- sum(policy_database_materials$timber, na.rm = TRUE)

sums_df_tidy <- sums_df_nontidy %>%
  mutate(subtract = case_when(
    name == "wood" ~ wood_to_remove, ## removing "mineral wood board insulation" from "wood"
    name == "concrete" ~ crs_to_remove, ##removing concrete reinforcing steel from "concrete"
    name == "rebar" ~ rebar_steel_to_remove, ##removing rebar where it ALSO mentions steel separately,
    name == "cement" ~ cement_to_remove,
  )) %>% 
    mutate(add = ifelse(
      name == "wood",timber_to_add,0)) %>% 
  mutate(subtract = ifelse(is.na(subtract), 0, subtract)) %>%
  mutate(n_final = n_policies-subtract+add) %>%
  filter(!name %in% c("rebar", "concrete reinforcing steel", "cement", "timber", "mineral wood"))





```

```{r}

legal_stat <- policy_database_materials %>%
  select(legal_status, aluminum:ncol(policy_database_materials)) 


##I checked that statutory has all the problematic ones from above so I'm going to use the same code otherwise repeat checking process by jurisdiction type sorry!

nonstat_df <- legal_stat %>%
  filter(legal_status == "Non-Statutory") %>% 
  pivot_longer(
    cols = -legal_status, # Select all columns except the first one
    values_to = "material", # Name for the new 'value' column
  ) %>% 
   filter(!is.na(material)) %>% 
  group_by(legal_status, name) %>% 
  summarize(total = sum(material)) %>%
filter(!name %in% c("rebar", "concrete reinforcing steel", "cement", "timber", "mineral wood"))

statutory_df <- legal_stat %>%
  filter(legal_status == "Statutory") %>% 
  pivot_longer(
    cols = -legal_status, # Select all columns except the first one
    values_to = "material", # Name for the new 'value' column
  ) %>% 
   filter(!is.na(material)) %>% 
  group_by(legal_status, name) %>% 
  summarize(total = sum(material)) %>% 
  mutate(subtract = case_when(
    name == "wood" ~ wood_to_remove, ## removing "mineral wood board insulation" from "wood"
    name == "concrete" ~ crs_to_remove, ##removing concrete reinforcing steel from "concrete"
    name == "rebar"  ~ rebar_steel_to_remove, ##removing rebar where it ALSO mentions steel separately,
    name == "cement"  ~ cement_to_remove)) %>% 
  mutate(add = ifelse(
      name == "wood" & legal_status == "Statutory",timber_to_add,0))%>% 
  mutate(subtract = ifelse(is.na(subtract), 0, subtract)) %>%
  mutate(n_final = total-subtract+add) %>%
  filter(!name %in% c("rebar", "concrete reinforcing steel", "cement", "timber", "mineral wood")) %>% 
  select(legal_status, name, total)

legal_stat_comb <- rbind(nonstat_df, statutory_df)

specific_names_legal <- c("wood"="Wood",  "steel"="Steel/Rebar", "insulation"="Insulation", "glass"="Glass", "concrete"="Concrete","asphalt"="Asphalt", "aluminum"="Aluminum", "brick" = "Brick", "iron" = "Iron")

legal_mat_plot <- ggplot(legal_stat_comb, aes(x = name, y = total, fill = legal_status)) +
  geom_bar(stat = "identity") +
  facet_wrap(~legal_status, ncol=1) +
  scale_fill_manual(values=c("grey30", "grey20"))+
  labs(x = "Material", y = "", fill = "Policy Addressed") +
  scale_x_discrete(labels = specific_names_legal) +
  theme_minimal() +
  theme(legend.position = "none",
         axis.text =  element_text(family="inter",
                                  size = 15),
  axis.title = element_text(family="inter",
                                  size = 20,
                            face="bold"),
        plot.title=element_text(family="inter",
                                  size = 40,
                                hjust=0.5),
                                strip.text = element_text(family="inter",
                                  size = 35,
                            face="bold")
        )+
  coord_flip()

legal_mat_plot


ggsave(here::here("images/legal_materials.png"), plot = legal_mat_plot, width = 7, height = 4, dpi = 320)
#  
```

```{r}

```

Graph this

```{r}

data_combined <- data_combined[order(-data_combined$n_final), ]
  
# Assume you have a vector of specific names for x-axis values
specific_names <- c("Concrete", "Steel/Rebar", "Wood/Timber", "Glass", "Insulation", "Cement", "Asphalt", "Aluminum")

# Create a new column in your dataset with the specific names
data_combined$specific_names <- specific_names

data_combined$ghg_emissions <- c(1,2,3,4,5,6,7,8)

# Create the bar chart
material_barplot <- ggplot(data_combined, aes(x = reorder(specific_names, n_final), y = n_final)) +
  geom_bar(stat = "identity", fill="blue") +  # Bars
  geom_segment( aes(x=specific_names, xend=specific_names, y=0, yend=ghg_emissions))+
  geom_point(aes(y = ghg_emissions, color = "red"), size = 3) +
  geom_text(aes(label = ghg_emissions))+
  labs(title = "Most Common Materials Addressed in Embodied Carbon Policies", x = "", y = "Number of Policies Addressing Material") +  # Add labels and titles
  # geom_text(aes(label = ghg_emissions),  
  #           color = "white",
  #           size = 8,
  #           hjust = 1.88) +  # Add count labels
  scale_y_continuous()+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5,
                                  face = "bold",
                                  family = "inter",
                                  size =12),
        axis.title = element_text(face = "bold",
                                  family="inter",
                                  size = 10,
                                  vjust = -2),
        axis.text =  element_text(
                                  family="inter",
                                  size = 10),
        legend.position = "none") 

material_barplot

ggsave(here::here("images/bar_plot.png"), plot = material_barplot, width = 7, height = 4, dpi = 320)
```

```{r}

factor_order_bc <- c("concrete", "steel/rebar", "glass", "wood/timber","asphalt", "cement","insulation",  "aluminum")

specific_names_bc <- c("concrete"="Concrete","steel/rebar"="Steel/Rebar","glass"="Glass", "wood/timber"="Wood/Timber",  "asphalt"="Asphalt", "cement" = "Cement","insulation"="Insulation",   "aluminum"="Aluminum")

buy_clean_long <- pivot_longer(buy_clean_tidy, cols = -policy_type, names_to = "Material", values_to = "Value") %>% 
   mutate(Material = ifelse(Material %in% c("wood", "timber"), "wood/timber", Material)) %>%
  mutate(Material = ifelse(Material %in% c("steel", "rebar"), "steel/rebar", Material)) 

buy_clean_type <- ggplot(buy_clean_long, aes(x = factor(Material,levels=factor_order_bc), y = Value, fill = policy_type)) +
  geom_bar(stat = "identity") +
  scale_y_continuous(breaks = c(1:15))+
  ylim(0,13)+
  labs(x="Material", y="Number of Buy Clean Policies", fill="Policy Type", title="Buy Clean Policy Materials by Policy Type")+
  scale_x_discrete(labels=specific_names_bc)+
  scale_fill_manual(values=c("#552586", "#804FB3", "#B589D6"))+
  theme_minimal()+
  theme(legend.position="bottom",
        plot.title = element_text(hjust = 0.5,
                                  face = "bold",
                                  family = "inter",
                                  size 40),
        axis.title = element_text(face = "bold",
                                  family="inter",
                                  size = 30,
                                  vjust = -2),
        axis.text =  element_text(
                                  family="inter",
                                  size = 20))


buy_clean_type




```

```{r}

buy_clean_country <-  policy_database %>% 
  filter(specific_lever =="Procurement Policy") %>%
  select(country, 49:ncol(policy_database)) 



buy_clean_count_long <- pivot_longer(buy_clean_country, cols = -country, names_to = "Material", values_to = "Value") %>% 
   mutate(Material = ifelse(Material %in% c("wood", "timber"), "wood/timber", Material)) %>%
  mutate(Material = ifelse(Material %in% c("steel", "rebar"), "steel/rebar", Material)) 


buy_clean_count_plot <- ggplot(buy_clean_count_long, aes(x = factor(Material,levels=factor_order_bc), y = Value,fill=country)) +
  geom_bar(stat = "identity") +

  scale_y_continuous(breaks = c(1:15))+
  ylim(0,13)+
  labs(x="Material", y="Number of Buy Clean Policies which Specify Materials", fill="Country", title="Buy Clean Policy Materials by Country")+
  scale_x_discrete(labels=specific_names_bc)+
  scale_fill_manual(values=c("orange", "orange4"))+
  theme_minimal()+
  theme(legend.position="bottom",
        plot.title = element_text(hjust = 0.5,
                                  face = "bold",
                                  family = "inter",
                                  size 40),
        axis.title = element_text(face = "bold",
                                  family="inter",
                                  size = 30,
                                  vjust = -2),
        axis.text =  element_text(
                                  family="inter",
                                  size = 20))


buy_clean_count_plot

```

```{r}
saved_plot <- cowplot::plot_grid(buy_clean_count_plot,buy_clean_type)

saved_plot

ggsave(here::here("images/combo_plot.png"), plot = saved_plot, width = 7, height = 4, dpi = 320)
```

Buy clean materials

```{r}



buy_clean <- policy_database_materials %>% 
  filter(specific_lever == "Procurement Policy") %>% 
  drop_na(covered_material_s)


buy_clean_sums <- buy_clean %>%
  summarise_at(c(4:ncol(policy_database_materials)), sum, na.rm = TRUE) %>% pivot_longer(., cols=everything(), values_to="n_policies")

##only 2 have concrete reinforcing steel in buy clean
buy_clean_sums_tidy <- buy_clean_sums %>% 
  mutate(subtract = ifelse(name=="concrete", 2, 0)) %>% 
  mutate(n_final = n_policies-subtract)

buy_clean_df <- buy_clean_sums_tidy %>% 
  select(1, 4)


##Combine wood and timber
buy_clean_combined <- buy_clean_df %>%
  mutate(name = ifelse(name %in% c("wood", "timber"), "wood/timber", name)) %>%
  mutate(name = ifelse(name %in% c("steel", "rebar"), "steel/rebar", name)) %>%
  group_by(name) %>%
  summarise(n_final = sum(n_final))

buy_clean_combined <- buy_clean_combined[order(-buy_clean_combined$n_final), ]


specific_names <- c("Concrete", "Steel/Rebar", "Wood/Timber", "Glass", "Insulation", "Cement", "Asphalt", "Aluminum")

# Create a new column in your dataset with the specific names
buy_clean_combined$specific_names <- specific_names

# Create the bar chart
buyclean_barplot <- ggplot(buy_clean_combined, aes(x = reorder(specific_names, n_final), y = n_final)) +
  geom_bar(stat = "identity", fill = "purple") +  # Bars
  labs(title = "Most Common Materials Addressed in Buy Clean Policies", x = "", y = "Number of Buy Clean Policies Addressing Material") +  # Add labels and titles
  geom_text(aes(label = n_final),  
            color = "white",
            size = 8,
            hjust = 1.88) +  # Add count labels
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5,
                                  face = "bold",
                                  family = "inter",
                                  size =12),
        axis.title = element_text(face = "bold",
                                  family="inter",
                                  size = 10,
                                  vjust = -2),
        axis.text =  element_text(
                                  family="inter",
                                  size = 10)) +
  coord_flip()


buyclean_barplot



ggsave(here::here("images/bc_plot.png"), plot = buyclean_barplot, width = 7, height = 4, dpi = 320)
```
