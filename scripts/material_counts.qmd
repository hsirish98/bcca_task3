---
title: "Material Data Wrangling"
author: "Hannah Irish"
format: html
editor: visual
---

Load packages

```{r}

## load tidyverse package 
library(tidyverse)


```

Read in policy database

```{r}

##
policy_database <- read_csv(here::here("data/Working_Policy_Database.csv")) %>%
  janitor::clean_names()
  # Convert the "materials" column to lowercase so they'll be captured appropriately
  policy_database$covered_material_s <- tolower(policy_database$covered_material_s)

```

Count the mentions of each material

```{r}

##make a list of the materials to capture 
material_list <- c("rebar", "steel", "aluminum", "insulation", "glass", "concrete", "cement", "asphalt", "wood", "timber")


##initialize material column to 0 in policy_database
for (material in material_list) {
  policy_database[[material]] <- 0
}



for (material in material_list){
  policy_database[[material]] <- str_count(policy_database$covered_material_s, material)
}


rebar_df <- policy_database[grepl("concrete reinforcing steel", policy_database$covered_material_s, ignore.case = TRUE), ]


## label as 1 if the material is included and as 0 if it's not
for(material in material_list){
  policy_database[[material]] <- ifelse(policy_database[[material]] >0 ,1,0)
}

# new database to investigate that functions worked correctly
policy_database_materials <- policy_database %>%
  select(2, 11, 22, 47:ncol(policy_database)) 

# sum the material counts to get total policies which mention them
sums_df_nontidy <- policy_database_materials %>%
  summarise_at(c(4:ncol(policy_database_materials)), sum, na.rm = TRUE) %>% pivot_longer(., cols=everything(), values_to="n_policies") 

sums_df_tidy <- sums_df_nontidy %>% 
  mutate(subtract = ifelse(name=="concrete", 3, 0)) %>% 
  mutate(n_final = n_policies-subtract)

sums_df <- sums_df_tidy %>% 
  select(1, 4)

##Combine wood and timber
data_combined <- sums_df %>%
  mutate(name = ifelse(name %in% c("wood", "timber"), "wood/timber", name)) %>%
  mutate(name = ifelse(name %in% c("steel", "rebar"), "steel/rebar", name)) %>%
  group_by(name) %>%
  summarise(n_final = sum(n_final))

```

Graph this

```{r}

data_combined <- data_combined[order(-data_combined$n_final), ]
  
# Assume you have a vector of specific names for x-axis values
specific_names <- c("Concrete", "Steel/Rebar", "Wood/Timber", "Glass", "Insulation", "Cement", "Asphalt", "Aluminum")

# Create a new column in your dataset with the specific names
data_combined$specific_names <- specific_names

# Create the bar chart
material_barplot <- ggplot(data_combined, aes(x = reorder(specific_names, n_final), y = n_final)) +
  geom_bar(stat = "identity", fill = "darkblue") +  # Bars
  labs(title = "Most Common Materials Addressed in Embodied Carbon Policies", x = "", y = "Number of Policies Addressing Material") +  # Add labels and titles
  geom_text(aes(label = n_final),  
            color = "white",
            size = 8,
            hjust = 1.88) +  # Add count labels
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5,
                                  face = "bold",
                                  family = "inter",
                                  size =12),
        axis.title = element_text(face = "bold",
                                  family="inter",
                                  size = 10,
                                  vjust = -2),
        axis.text =  element_text(
                                  family="inter",
                                  size = 10)) +
  coord_flip()

material_barplot

ggsave(here::here("images/bar_plot.png"), plot = material_barplot, width = 7, height = 4, dpi = 320)
```

Buy clean materials

```{r}



buy_clean <- policy_database_materials %>% 
  filter(specific_lever == "Procurement Policy") %>% 
  drop_na(covered_material_s)


buy_clean_sums <- buy_clean %>%
  summarise_at(c(4:ncol(policy_database_materials)), sum, na.rm = TRUE) %>% pivot_longer(., cols=everything(), values_to="n_policies")

##only 2 have concrete reinforcing steel in buy clean
buy_clean_sums_tidy <- buy_clean_sums %>% 
  mutate(subtract = ifelse(name=="concrete", 2, 0)) %>% 
  mutate(n_final = n_policies-subtract)

buy_clean_df <- buy_clean_sums_tidy %>% 
  select(1, 4)


##Combine wood and timber
buy_clean_combined <- buy_clean_df %>%
  mutate(name = ifelse(name %in% c("wood", "timber"), "wood/timber", name)) %>%
  mutate(name = ifelse(name %in% c("steel", "rebar"), "steel/rebar", name)) %>%
  group_by(name) %>%
  summarise(n_final = sum(n_final))

buy_clean_combined <- buy_clean_combined[order(-buy_clean_combined$n_final), ]


specific_names <- c("Concrete", "Steel/Rebar", "Wood/Timber", "Glass", "Insulation", "Cement", "Asphalt", "Aluminum")

# Create a new column in your dataset with the specific names
buy_clean_combined$specific_names <- specific_names

# Create the bar chart
buyclean_barplot <- ggplot(buy_clean_combined, aes(x = reorder(specific_names, n_final), y = n_final)) +
  geom_bar(stat = "identity", fill = "purple") +  # Bars
  labs(title = "Most Common Materials Addressed in Buy Clean Policies", x = "", y = "Number of Buy Clean Policies Addressing Material") +  # Add labels and titles
  geom_text(aes(label = n_final),  
            color = "white",
            size = 8,
            hjust = 1.88) +  # Add count labels
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5,
                                  face = "bold",
                                  family = "inter",
                                  size =12),
        axis.title = element_text(face = "bold",
                                  family="inter",
                                  size = 10,
                                  vjust = -2),
        axis.text =  element_text(
                                  family="inter",
                                  size = 10)) +
  coord_flip()


buyclean_barplot



ggsave(here::here("images/bc_plot.png"), plot = buyclean_barplot, width = 7, height = 4, dpi = 320)
```
